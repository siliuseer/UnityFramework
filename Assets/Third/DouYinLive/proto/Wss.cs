// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: wss.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Douyin {

  /// <summary>Holder for reflection information generated from wss.proto</summary>
  public static partial class WssReflection {

    #region Descriptor
    /// <summary>File descriptor for wss.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WssReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgl3c3MucHJvdG8SBkRvdXlpbiLrAQoLV3NzUmVzcG9uc2USDQoFc2VxaWQY",
            "ASABKAQSDQoFbG9naWQYAiABKAQSDwoHc2VydmljZRgDIAEoBBIOCgZtZXRo",
            "b2QYBCABKAQSMQoHaGVhZGVycxgFIAMoCzIgLkRvdXlpbi5Xc3NSZXNwb25z",
            "ZS5IZWFkZXJzRW50cnkSFwoPcGF5bG9hZEVuY29kaW5nGAYgASgJEhMKC3Bh",
            "eWxvYWRUeXBlGAcgASgJEgwKBGRhdGEYCCABKAwaLgoMSGVhZGVyc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Douyin.WssResponse), global::Douyin.WssResponse.Parser, new[]{ "Seqid", "Logid", "Service", "Method", "Headers", "PayloadEncoding", "PayloadType", "Data" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WssResponse : pb::IMessage<WssResponse> {
    private static readonly pb::MessageParser<WssResponse> _parser = new pb::MessageParser<WssResponse>(() => new WssResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WssResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Douyin.WssReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssResponse(WssResponse other) : this() {
      seqid_ = other.seqid_;
      logid_ = other.logid_;
      service_ = other.service_;
      method_ = other.method_;
      headers_ = other.headers_.Clone();
      payloadEncoding_ = other.payloadEncoding_;
      payloadType_ = other.payloadType_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WssResponse Clone() {
      return new WssResponse(this);
    }

    /// <summary>Field number for the "seqid" field.</summary>
    public const int SeqidFieldNumber = 1;
    private ulong seqid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Seqid {
      get { return seqid_; }
      set {
        seqid_ = value;
      }
    }

    /// <summary>Field number for the "logid" field.</summary>
    public const int LogidFieldNumber = 2;
    private ulong logid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Logid {
      get { return logid_; }
      set {
        logid_ = value;
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 3;
    private ulong service_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Service {
      get { return service_; }
      set {
        service_ = value;
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 4;
    private ulong method_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "payloadEncoding" field.</summary>
    public const int PayloadEncodingFieldNumber = 6;
    private string payloadEncoding_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadEncoding {
      get { return payloadEncoding_; }
      set {
        payloadEncoding_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payloadType" field.</summary>
    public const int PayloadTypeFieldNumber = 7;
    private string payloadType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadType {
      get { return payloadType_; }
      set {
        payloadType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 8;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WssResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WssResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seqid != other.Seqid) return false;
      if (Logid != other.Logid) return false;
      if (Service != other.Service) return false;
      if (Method != other.Method) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (PayloadEncoding != other.PayloadEncoding) return false;
      if (PayloadType != other.PayloadType) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seqid != 0UL) hash ^= Seqid.GetHashCode();
      if (Logid != 0UL) hash ^= Logid.GetHashCode();
      if (Service != 0UL) hash ^= Service.GetHashCode();
      if (Method != 0UL) hash ^= Method.GetHashCode();
      hash ^= Headers.GetHashCode();
      if (PayloadEncoding.Length != 0) hash ^= PayloadEncoding.GetHashCode();
      if (PayloadType.Length != 0) hash ^= PayloadType.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Seqid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Seqid);
      }
      if (Logid != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Logid);
      }
      if (Service != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Service);
      }
      if (Method != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Method);
      }
      headers_.WriteTo(output, _map_headers_codec);
      if (PayloadEncoding.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PayloadEncoding);
      }
      if (PayloadType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PayloadType);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seqid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Seqid);
      }
      if (Logid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Logid);
      }
      if (Service != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Service);
      }
      if (Method != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Method);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      if (PayloadEncoding.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadEncoding);
      }
      if (PayloadType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadType);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WssResponse other) {
      if (other == null) {
        return;
      }
      if (other.Seqid != 0UL) {
        Seqid = other.Seqid;
      }
      if (other.Logid != 0UL) {
        Logid = other.Logid;
      }
      if (other.Service != 0UL) {
        Service = other.Service;
      }
      if (other.Method != 0UL) {
        Method = other.Method;
      }
      headers_.Add(other.headers_);
      if (other.PayloadEncoding.Length != 0) {
        PayloadEncoding = other.PayloadEncoding;
      }
      if (other.PayloadType.Length != 0) {
        PayloadType = other.PayloadType;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seqid = input.ReadUInt64();
            break;
          }
          case 16: {
            Logid = input.ReadUInt64();
            break;
          }
          case 24: {
            Service = input.ReadUInt64();
            break;
          }
          case 32: {
            Method = input.ReadUInt64();
            break;
          }
          case 42: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 50: {
            PayloadEncoding = input.ReadString();
            break;
          }
          case 58: {
            PayloadType = input.ReadString();
            break;
          }
          case 66: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
